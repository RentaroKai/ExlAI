[
  {
    "title": "色と形を抽出",
    "prompt": "入力された物の一般的な「色」と「形」を抽出してリターンしてください。",
    "json_format_example": {
      "色": "",
      "形": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "色",
        "形"
      ],
      "rows": [
        [
          "",
          "りんご",
          "赤",
          "まるい"
        ],
        [
          "",
          "お皿",
          "白",
          "まるい"
        ]
      ]
    },
    "id": 1
  },
  {
    "title": "校正とその理由",
    "prompt": "入力された日本語の文章を必要があれば校正し、その結果を「校正後」として出力し、「校正の理由」に理由を書いてください。校正が不要な場合は校正の理由を「校正なし」としてください。",
    "json_format_example": {
      "校正後": "",
      "校正の理由": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "校正後",
        "校正の理由"
      ],
      "rows": [
        [
          "",
          "ごはんがたべたいです",
          "ご飯が食べたいです",
          "適切な漢字の利用"
        ],
        [
          "",
          "興味がありますん",
          "興味がありません",
          "誤字"
        ]
      ]
    },
    "id": 5,
    "rule_name": "日本語校正"
  },
  {
    "title": "読みカナ変換",
    "prompt": "入力された文字列を、その読みのカタカナ表記に変換してください。",
    "json_format_example": {
      "カタカナ": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "カタカナ"
      ],
      "rows": [
        [
          "",
          "女",
          "オンナ"
        ],
        [
          "",
          "じょせい",
          "ジョセイ"
        ]
      ]
    },
    "id": 6
  },
  {
    "title": "テキスト分類・重要度判定",
    "prompt": "問い合わせ内容を分析し、内容に合ったカテゴリと重要度（高/中/低）を特定してください。",
    "json_format_example": {
      "カテゴリ": "",
      "重要度（高/中/低）": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "カテゴリ",
        "重要度（高/中/低）"
      ],
      "rows": [
        [
          "",
          "4月分の請求書が届いていないのですが、至急確認お願いします。",
          "請求／入金",
          "高"
        ]
      ]
    },
    "id": 7
  },
  {
    "title": "テキスト分類・重要度判定",
    "prompt": "入力テキストを分析し、内容に合ったカテゴリと重要度（高/中/低）を特定してください。",
    "json_format_example": {
      "カテゴリ": "",
      "重要度（高/中/低）": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "カテゴリ",
        "重要度（高/中/低）"
      ],
      "rows": [
        [
          "",
          "4月分の請求書が届いていないのですが、至急確認お願いします。",
          "請求／入金",
          "高"
        ]
      ]
    },
    "id": 7,
    "rule_name": "テキスト分類・重要度判定"
  },
  {
    "title": "個人情報整形",
    "prompt": "入力テキストから、以下の情報を抽出・整形してください。\n・氏名（姓）\n・氏名（名）\n・フリガナ（姓名）氏名をカタカナに変換し、姓と名の間はスペースで区切る\n・メールアドレス\n・電話番号（ハイフン無し）",
    "json_format_example": {
      "氏名（姓）": "",
      "氏名（名）": "",
      "フリガナ（姓名）": "",
      "メールアドレス": "",
      "電話番号（ハイフン無）": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "氏名（姓）",
        "氏名（名）",
        "フリガナ（姓名）",
        "メールアドレス",
        "電話番号（ハイフン無）"
      ],
      "rows": [
        [
          "",
          "田中太郎 <br/> tanaka@example.co.jp <br/> 03-1234-5678",
          "田中",
          "太郎",
          "タナカ タロウ",
          "tanaka@example.co.jp",
          "0312345678"
        ]
      ]
    },
    "id": 8
  },
  {
    "title": "個人情報整形",
    "prompt": "入力テキスト（1行目: 氏名, 2行目: メールアドレス, 3行目: 電話番号）から、以下の情報を抽出・整形してください。\n・氏名（姓）: 1行目のスペース前の文字列\n・氏名（名）: 1行目のスペース後の文字列\n・フリガナ（姓名）: 1行目の氏名をカタカナに変換し、姓と名の間はスペースで区切る\n・メールアドレス: 2行目の文字列\n・電話番号（ハイフン無）: 3行目の文字列からハイフンを除去",
    "json_format_example": {
      "氏名（姓）": "",
      "氏名（名）": "",
      "フリガナ（姓名）": "",
      "メールアドレス": "",
      "電話番号（ハイフン無）": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "氏名（姓）",
        "氏名（名）",
        "フリガナ（姓名）",
        "メールアドレス",
        "電話番号（ハイフン無）"
      ],
      "rows": [
        [
          "",
          "田中太郎 <br/> tanaka@example.co.jp <br/> 03-1234-5678",
          "田中",
          "太郎",
          "タナカ タロウ",
          "tanaka@example.co.jp",
          "0312345678"
        ]
      ]
    },
    "id": 8,
    "rule_name": "個人情報整形"
  },
  {
    "title": "日本住所抽出",
    "prompt": "入力文字列を日本の住所として解析し、都道府県、市町村（町域名まで）、番地以降、建物名と部屋番号（なければ「なし」）、郵便番号（ハイフンなし）を抽出してください。",
    "json_format_example": {
      "都道府県": "",
      "市町村": "",
      "番地以降": "",
      "建物名と部屋番号（あれば）": "",
      "郵便番号（ハイフンなし）": ""
    },
    "sample_data": {
      "headers": [
        "AIの進捗",
        "元の値",
        "都道府県",
        "市町村",
        "番地以降",
        "建物名と部屋番号（あれば）",
        "郵便番号（ハイフンなし）"
      ],
      "rows": [
        [
          "",
          "東京都渋谷区神南1-19-11<br/>150-0041",
          "東京都",
          "渋谷区神南",
          "1-19-11",
          "なし",
          "1500041"
        ],
        [
          "",
          "東京都渋谷区神南1-19-11スペシャルビル201",
          "東京都",
          "渋谷区神南",
          "1-19-11",
          "スペシャルビル201",
          "1500041"
        ]
      ]
    },
    "id": 9
  }
]